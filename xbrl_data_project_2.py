# -*- coding: utf-8 -*-
"""XBRL Data-project 2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1yvhPaz5VP4YUPOz9ESEOtvsciGHtGDec
"""

import pandas as pd
import numpy as np

df=pd.read_csv("find_query.csv")

co=pd.read_csv("MasterCompanycsv.csv")

co.head()

co.sector.unique()

co_industry=co[co["sector"]=="Manufacturing"][["cik","industry","companyName"]]

a=df[df["elementName"]=="us-gaap_Assets"][["cik","FY","FQ","value"]]
b=df[df["elementName"]=="us-gaap_Liabilities"][["cik","FY","FQ","value"]]
c=df[df["elementName"]=="us-gaap_NetIncomeLoss"][["cik","FY","FQ","value"]]
d=df[df["elementName"]=="us-gaap_EarningsPerShareBasic"][["cik","FY","FQ","value"]]
e=df[df["elementName"]=="us-gaap_LiabilitiesAndStockholdersEquity"][["cik","FY","FQ","value"]]

a=a.rename({"value":"Assets"}, axis=1)
b=b.rename({"value":"Liabilities"}, axis=1)
c=c.rename({"value":"NetIncome"}, axis=1)
d=d.rename({"value":"EPSBasic"}, axis=1)
e=e.rename({"value":"LiabilityandStockholdersEquity"}, axis=1)

merge1=pd.merge(a,b,on=["cik","FY","FQ"], how="outer")
merge2=pd.merge(c,d,on=["cik","FY","FQ"], how="outer")
merge3=pd.merge(e,merge1,on=["cik","FY","FQ"], how="outer")
merge4=pd.merge(merge2,merge3,on=["cik","FY","FQ"], how="outer")
Industry_data=pd.merge(merge4,co_industry,on=["cik"], how="inner")

Industry_data["StockholdersEquity"]=Industry_data["LiabilityandStockholdersEquity"]-Industry_data["Liabilities"]
Industry_data["ROA"]=Industry_data["NetIncome"]/Industry_data["Assets"]

Industry_data["ROE"]=Industry_data["NetIncome"]/Industry_data["StockholdersEquity"]
Industry_data["D/E"]=Industry_data["Liabilities"]/Industry_data["StockholdersEquity"]

Industry_data

"""descriptive statistics"""

Industry_data.describe()

x=Industry_data[Industry_data['Assets']<0]

x

Industry_data=Industry_data.drop(['NetIncome','LiabilityandStockholdersEquity','Liabilities','Assets','StockholdersEquity'], axis=1)

Industry_data.describe()

nan_value = float("NaN")

Industry_data. replace("ROA", nan_value, inplace=True)

Industry_data. dropna(subset = ["ROA"], inplace=True)

Industry_data. replace("ROE", nan_value, inplace=True)

Industry_data. dropna(subset = ["ROE"], inplace=True)
Industry_data. dropna(subset = ["D/E"], inplace=True)

Industry_data. dropna(subset = ["EPSBasic"], inplace=True)

Industry_data.describe()

Industry_data.to_csv("Data_Analysis2.csv")